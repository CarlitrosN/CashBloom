# Generated by Django 5.2 on 2025-04-25 03:29

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('gestion', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='GastoRecurrente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grupo_concepto', models.CharField(max_length=150, verbose_name='Grupo o Concepto del Gasto')),
                ('descripcion', models.TextField(verbose_name='Descripción del Gasto')),
                ('monto_base', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Valor Base a Pagar')),
                ('moneda', models.CharField(default='USD', max_length=10, verbose_name='Moneda')),
                ('fecha_inicio', models.DateField(verbose_name='Fecha de Inicio (Primer Pago)')),
                ('frecuencia', models.CharField(choices=[('DIA', 'Diario'), ('SEM', 'Semanal'), ('QUI', 'Quincenal'), ('MES', 'Mensual'), ('BIM', 'Bimestral'), ('TRI', 'Trimestral'), ('SME', 'Semestral'), ('ANU', 'Anual'), ('UNI', 'Única Vez')], max_length=3, verbose_name='Repetición del Pago')),
                ('dia_del_mes', models.PositiveSmallIntegerField(blank=True, help_text='Para pagos mensuales/bimestrales/etc. especificar el día.', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(31)], verbose_name='Día del Mes (si aplica)')),
                ('fecha_fin', models.DateField(blank=True, null=True, verbose_name='Fecha Final del Pago (Opcional)')),
                ('activo', models.BooleanField(default=True, verbose_name='¿Está Activo?')),
                ('comentarios', models.TextField(blank=True, verbose_name='Comentarios / Observaciones')),
                ('creado_en', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Registro')),
                ('actualizado_en', models.DateTimeField(auto_now=True, verbose_name='Última Actualización')),
                ('actualizado_por', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='gastos_recurrentes_actualizados', to=settings.AUTH_USER_MODEL, verbose_name='Actualizado por')),
                ('creado_por', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='gastos_recurrentes_creados', to=settings.AUTH_USER_MODEL, verbose_name='Registrado por')),
                ('responsable_pago', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='gastos_recurrentes_asignados', to=settings.AUTH_USER_MODEL, verbose_name='Responsable de Realizar Pago')),
            ],
            options={
                'verbose_name': 'Gasto Recurrente (Plantilla)',
                'verbose_name_plural': 'Gastos Recurrentes (Plantillas)',
                'ordering': ['grupo_concepto', 'descripcion'],
            },
        ),
        migrations.CreateModel(
            name='Proveedor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identificacion', models.CharField(max_length=50, unique=True, verbose_name='Identificación (NIT, RUT, CUIT, etc.)')),
                ('nombre', models.CharField(max_length=255, verbose_name='Nombre o Razón Social')),
                ('telefono', models.CharField(blank=True, max_length=50, null=True, verbose_name='Teléfono')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Correo Electrónico')),
                ('direccion', models.TextField(blank=True, null=True, verbose_name='Dirección')),
                ('pais', models.CharField(blank=True, max_length=100, null=True, verbose_name='País')),
                ('creado_en', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('actualizado_en', models.DateTimeField(auto_now=True, verbose_name='Última Actualización')),
                ('actualizado_por', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='proveedores_actualizados', to=settings.AUTH_USER_MODEL, verbose_name='Actualizado por')),
                ('creado_por', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='proveedores_creados', to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
            ],
            options={
                'verbose_name': 'Proveedor',
                'verbose_name_plural': 'Proveedores',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Pago',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grupo_concepto', models.CharField(blank=True, max_length=150, verbose_name='Grupo o Concepto General del Pago')),
                ('fecha_emision_factura', models.DateField(verbose_name='Fecha Emisión Factura Proveedor')),
                ('pais_proveedor', models.CharField(blank=True, max_length=100, verbose_name='País del Proveedor')),
                ('numero_documento', models.CharField(max_length=100, verbose_name='Nº Factura/Documento del Proveedor')),
                ('tipo_compra', models.CharField(choices=[('BIEN', 'Compra de Bienes'), ('SERV', 'Contratación de Servicios'), ('ACTI', 'Adquisición de Activos'), ('GAST', 'Gasto Operativo'), ('IMPU', 'Pago de Impuestos'), ('OTRO', 'Otro')], default='BIEN', max_length=4, verbose_name='Tipo de Compra/Gasto')),
                ('subtotal', models.DecimalField(decimal_places=2, default=0.0, max_digits=15, verbose_name='Subtotal')),
                ('impuestos', models.DecimalField(decimal_places=2, default=0.0, max_digits=15, verbose_name='Impuestos')),
                ('total_factura', models.DecimalField(decimal_places=2, default=0.0, editable=False, max_digits=15, verbose_name='Total a Pagar')),
                ('numero_cuotas', models.PositiveSmallIntegerField(default=1, help_text='Máximo 12 cuotas', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)], verbose_name='Número de Cuotas a Pagar')),
                ('fecha_vencimiento_inicial', models.DateField(blank=True, null=True, verbose_name='Fecha Vencimiento (Inicial/Única)')),
                ('estatus', models.CharField(choices=[('PEND', 'Pendiente de Pago'), ('PARC', 'Pagado Parcialmente'), ('PAGA', 'Pagado Totalmente'), ('VENC', 'Vencido'), ('ANUL', 'Anulado')], default='PEND', max_length=4, verbose_name='Estatus General del Pago')),
                ('comentarios', models.TextField(blank=True, verbose_name='Comentarios / Observaciones')),
                ('creado_en', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Registro')),
                ('actualizado_en', models.DateTimeField(auto_now=True, verbose_name='Última Actualización')),
                ('actualizado_por', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pagos_actualizados', to=settings.AUTH_USER_MODEL, verbose_name='Actualizado por')),
                ('creado_por', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pagos_creados', to=settings.AUTH_USER_MODEL, verbose_name='Registrado por')),
                ('responsable_pago', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pagos_asignados', to=settings.AUTH_USER_MODEL, verbose_name='Responsable de Realizar Pago')),
                ('proveedor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='pagos_a_realizar', to='gestion.proveedor', verbose_name='Proveedor')),
            ],
            options={
                'verbose_name': 'Registro de Pago a Proveedor',
                'verbose_name_plural': 'Registros de Pagos a Proveedores',
                'ordering': ['-fecha_vencimiento_inicial', 'fecha_emision_factura'],
            },
        ),
        migrations.CreateModel(
            name='OcurrenciaGasto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_vencimiento', models.DateField(verbose_name='Fecha Tentativa de Pago')),
                ('monto', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Monto a Pagar')),
                ('estatus', models.CharField(choices=[('PEND', 'Pendiente'), ('PAGA', 'Pagado'), ('VENC', 'Vencido'), ('ANUL', 'Anulado')], default='PEND', max_length=4, verbose_name='Estado')),
                ('fecha_pago_real', models.DateField(blank=True, null=True, verbose_name='Fecha Real de Pago')),
                ('comentarios', models.TextField(blank=True, verbose_name='Comentarios Específicos de la Ocurrencia')),
                ('creado_en', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación Ocurrencia')),
                ('actualizado_en', models.DateTimeField(auto_now=True, verbose_name='Última Actualización Ocurrencia')),
                ('gasto_recurrente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ocurrencias', to='gestion.gastorecurrente', verbose_name='Gasto Recurrente Asociado')),
                ('pagado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ocurrencias_pagadas', to=settings.AUTH_USER_MODEL, verbose_name='Pagado por')),
            ],
            options={
                'verbose_name': 'Ocurrencia de Gasto Recurrente',
                'verbose_name_plural': 'Ocurrencias de Gastos Recurrentes',
                'ordering': ['fecha_vencimiento', 'gasto_recurrente'],
                'indexes': [models.Index(fields=['gasto_recurrente'], name='gestion_ocu_gasto_r_e359c9_idx'), models.Index(fields=['fecha_vencimiento'], name='gestion_ocu_fecha_v_e79a43_idx'), models.Index(fields=['estatus'], name='gestion_ocu_estatus_271a8f_idx')],
            },
        ),
        migrations.CreateModel(
            name='DetalleCuotaPago',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_cuota', models.PositiveSmallIntegerField(verbose_name='Nº Cuota')),
                ('monto_cuota', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Monto de la Cuota')),
                ('fecha_vencimiento', models.DateField(verbose_name='Fecha de Vencimiento (Pago Tentativo)')),
                ('fecha_pago_real', models.DateField(blank=True, null=True, verbose_name='Fecha Real de Pago')),
                ('estatus', models.CharField(choices=[('PEND', 'Pendiente'), ('PAGA', 'Pagada'), ('VENC', 'Vencida'), ('ANUL', 'Anulada')], default='PEND', max_length=4, verbose_name='Estatus Cuota')),
                ('observaciones_cuota', models.TextField(blank=True, verbose_name='Observaciones Específicas de la Cuota')),
                ('pago', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cuotas_pago', to='gestion.pago', verbose_name='Pago Asociado')),
            ],
            options={
                'verbose_name': 'Detalle de Cuota de Pago',
                'verbose_name_plural': 'Detalles de Cuotas de Pagos',
                'ordering': ['pago', 'numero_cuota'],
                'indexes': [models.Index(fields=['pago'], name='gestion_det_pago_id_830a75_idx'), models.Index(fields=['fecha_vencimiento'], name='gestion_det_fecha_v_c257e7_idx'), models.Index(fields=['estatus'], name='gestion_det_estatus_c3767f_idx')],
                'unique_together': {('pago', 'numero_cuota')},
            },
        ),
        migrations.AddIndex(
            model_name='pago',
            index=models.Index(fields=['proveedor'], name='gestion_pag_proveed_9f4f20_idx'),
        ),
        migrations.AddIndex(
            model_name='pago',
            index=models.Index(fields=['fecha_emision_factura'], name='gestion_pag_fecha_e_7955b3_idx'),
        ),
        migrations.AddIndex(
            model_name='pago',
            index=models.Index(fields=['fecha_vencimiento_inicial'], name='gestion_pag_fecha_v_fd7b3a_idx'),
        ),
        migrations.AddIndex(
            model_name='pago',
            index=models.Index(fields=['estatus'], name='gestion_pag_estatus_def08a_idx'),
        ),
    ]
